name: Build and Push Docker Image to Artifact Registry

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create credential file and .env file
        run: |
          echo "APPLICATION_ENV=production" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build the Docker image
        run: |
          docker build -t google-vision:latest .

      - name: Configure GCP Credentials
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_JSON }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker asia-south1-docker.pkg.dev --quiet

      - name: Push the Docker image
        env: 
          ARTIFACT_REGISTRY_URL: ${{ secrets.GCP_ARTIFACT_REGISTORY_URL }}
        run: |
          docker tag google-vision:latest $ARTIFACT_REGISTRY_URL/google-vision:latest
          docker push $ARTIFACT_REGISTRY_URL/google-vision:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        env:
          TF_VAR_service_account_key_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_JSON }}
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
          TF_VAR_artifact_registry_url: ${{ secrets.GCP_ARTIFACT_REGISTORY_URL }}
          TF_VAR_region: ${{ secrets.REGION }}
        run: terraform apply -auto-approve